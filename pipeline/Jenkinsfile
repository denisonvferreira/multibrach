// def properties = [:]
// assert props['key'] == null
pipeline {
    agent any
    stages {
	stage('Loading ENVs - HML'){
		when {
			anyOf {
				branch 'main'
			}
		}
		steps {
			script{
// 				properties = readJSON file: '${WORKSPACE}/pipeline/props-hml.json', returnPojo: true
				props = readJSON file: "${WORKSPACE}/pipeline/props-hml.json", returnPojo: true
					assert props['key'] == null
					props.each { key, value ->
						env."${key}" = "${value}"
						sh "echo 'props-hml - ${key} : ${value}'"
				}
			}
		}
			
	}
	    
	stage('Loading ENVs - DEV'){
		when {
			anyOf {
				branch 'dev'
			}
		}
		steps {
			script{
// 				properties = readJSON file: '${WORKSPACE}/pipeline/props-hml.json', returnPojo: true
				def props = readJSON file: "${WORKSPACE}/pipeline/props.json", returnPojo: true
				assert props['key'] == null
				props.each { key, value ->
					env."${key}" = "${value}"
					sh "echo 'props - ${key} : ${value}'"
				}
			}
		}
			
	}
		
        stage('Hello') {
               when {
                    anyOf { 
                        branch 'main*'
                        branch 'dev*'
                    }
               }
            steps {
		    script{
			    mail to:"denison.ferreira@hotmail.com.br",
				subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) sucess.",
				body: "${currentBuild.currentResult}: Job ${env.JOB_NAME}\nMore Info can be found here: ${env.BUILD_URL}"
			    timeout(time: 30, unit: 'MINUTES') {
				    try{
					 userInput = input(
					 id: 'Proceed1', message: 'Confirma a RC?', parameters: [
					 [$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Confirma o deploy?']
					 ])
				    } catch(err) {
					    userInput = false
				    }
				    if (userInput == true){
					    echo "tageando imagem buildada"
					    echo "Buildando imagem nova"
				    } else {
					    echo "apagando imagem buildada"
					    sh '''
					    pwd
					    ls
					    echo ${IMAGE_NAME}
					    echo ${IMAGE_NAME-PRD}
//  					    echo properties.IMAGE_NAME
//  					    echo properties.IMAGE_NAME-PRD
					    '''
				    }
			    } 
			    
// 	    	    	def jobName = new Date()
// 				jobName = jobName.format("yyyyMMddHHmmss", TimeZone.getTimeZone('UTC'))
// 		        	currentBuild.displayName = "$jobName"
// 		        	jobName = "teste-nome"+"_"+jobName
// 				node {
// 					echo "job name $jobName"
// 				}
			sh'''
			echo $jobName
			'''			
		    }
	    }
    
	}
    }
}
//     post{
//     	always{
// 		mail to:"denison.ferreira@hotmail.com.br",
// 		subject: "Test Email",
// 		body: "Test"
// 	}
//     }
//     post{
//     	failure{
// 		mail to:"denison.ferreira@hotmail.com.br",
// 		subject: "Test Email",
// 			body: "${currentBuild.currentResult}: Job ${env.JOB_NAME}\nMore Info can be found here: ${env.BUILD_URL}"
// 	}
//     }
// options {
// 	environment {
// 		IMAGE_NAME = "${properties.IMAGE_NAME}"
// 		IMAGE_NAMEPRD = "${properties.IMAGE_NAMEPRD}"
// 	}

// }
	
